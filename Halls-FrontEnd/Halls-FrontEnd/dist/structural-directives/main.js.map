{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/forgetpass/forgetpass.component.ts","./src/app/forgetpass/forgetpass.component.html","./src/app/form-data/form-data.component.ts","./src/app/form-data/form-data.component.html","./src/app/form-data/validators.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/material/material.module.ts","./src/app/resetpass/resetpass.component.ts","./src/app/resetpass/resetpass.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/signup/validator.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport {FormDataComponent} from './form-data/form-data.component'\nimport {ForgetPassComponent} from './forgetpass/forgetpass.component'\nimport {ResetpassComponent} from './resetpass/resetpass.component'\nimport {ResultComponent} from './result/result.component'\nimport {AuthGuard} from './auth.guard'\n\nconst routes: Routes = [{path:'signup',component:SignupComponent},\n                        {path:'',component:HomeComponent},\n                        {path:'forgetpass',component:ForgetPassComponent},\n                        {path:'resetpass',component:ResetpassComponent},\n                        {path:'FormData',component:FormDataComponent,canActivate:[AuthGuard]},\n                        {path:'result',component:ResultComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents=[SignupComponent,HomeComponent]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public url=\"http://localhost:3000/\";\n  // public url=\"http://salmabehalls.eu-gb.mybluemix.net/\";\n}\n","\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppRoutingModule ,routingComponents} from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select'\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { FormDataComponent } from './form-data/form-data.component'\nimport {AuthService} from './auth.service'\nimport {SidebarModule} from \"ng-sidebar\"\nimport {MaterialModule} from './material/material.module'\nimport {AuthGuard} from './auth.guard'\nimport {TokenInterceptorService} from './token-interceptor.service';\nimport { ForgetPassComponent } from './forgetpass/forgetpass.component';\nimport { ResetpassComponent } from './resetpass/resetpass.component';\nimport { ResultComponent } from './result/result.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    SignupComponent,\n    HomeComponent,\n    FormDataComponent,\n    ForgetPassComponent,\n    ResetpassComponent,\n    ResultComponent\n    // TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // MatFormField,\n    MatFormFieldModule,\n    MatInputModule,\n    MaterialModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:TokenInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanDeactivate, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\nimport {AuthService} from './auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n  constructor(private _authService:AuthService,\n              private _router:Router){\n\n  }\n  canActivate() :boolean{\n    if(this._authService.loggedIn()){\n      return true\n    }\n    else{\n      this._router.navigate([''])\n      return false\n\n    }\n  }\n \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpParams} from '@angular/common/http'\nimport{Router} from '@angular/router'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedInStatus=JSON.parse(localStorage.getItem('loggedIn')||'false');\n  public  baseUrl=\"http://localhost:3000\"\n  //public baseUrl=\"https://hallsback.eu-gb.mybluemix.net\"\n  private _loginUrl=this.baseUrl+\"/user/login\";\n  private _signUpUrl=this.baseUrl+\"/user/signup\"\n  private _verifyUrl=this.baseUrl+\"/user/forgetPassword/\";\n  private _resetPassUrl=this.baseUrl+\"/user/resetPassword\";\n  private _isMailExistUrl=this.baseUrl+\"/user/mailExist\";\n  constructor(private http:HttpClient,private _router:Router) { }\n\n\n  loginUser(user){\n    console.log(user)\n    // console.log(rememberMe)\n    return this.http.post<any>(this._loginUrl,user)\n  }\n  setLoggedIn(value:boolean){\n    this.loggedInStatus=value;\n    localStorage.setItem('loggedIn','true');\n  }\n  get isLoggedIn(){\n    return JSON.parse(localStorage.getItem('loggedIn')||this.loggedInStatus.toString());\n\n\n  }\n  SignUp(user){\n    return this.http.post<any>(this._signUpUrl,{\n        name:user.name,\n        email:user.email,\n        password: user.password})\n  }\n  forgetPassword(user){\n    const url=this._verifyUrl+user.email;\n    console.log(url)\n    return this.http.get<any>(url)\n  }\n  resetPassword(user,id){\n    console.log(id)\n    const query={params:new HttpParams({fromString:\"_id=`${id}`\"})}\n    return this.http.post<any>(this._resetPassUrl,{\n      newPassword:user.password,\n      confirmedPassword:user.Repassword\n    },{params:{id:id}})\n    }\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n  getToken(){\n    console.log(\"tokennnnnn   \"+localStorage.getItem('token'))\n    return localStorage.getItem('token');\n  }\n  logOut(){\n    localStorage.removeItem('token');\n    this._router.navigate(['']);\n\n  }\n  isMailExist(mail){\n    console.log(\"in auth\")\n    console.log(mail)\n    return this.http.get<any>(this._isMailExistUrl+\"/\"+mail)\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms'\nimport {emailValidator} from '../signup/validator'\nimport {AuthService} from '../auth.service'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetPassComponent implements OnInit {\n\n  rForm:FormGroup\n  isValidEmail:boolean=true;\n  mailSent:boolean=false;\n  constructor(private fb:FormBuilder,private _auth:AuthService) { \n    this.rForm=fb.group({\n      'email':['',emailValidator] ,\n     })\n  }\n\n  ngOnInit(): void {\n  }\n  focusIn(event: FocusEvent) {\n    this.isValidEmail=true;\n  }\n\n  Submit(data){\n    this._auth.forgetPassword(data).subscribe(\n      res=>{\n        this.mailSent=true;\n      },\n      err=>{\n      if(err instanceof HttpErrorResponse){\n        if(err.status===401){\n          this.isValidEmail=false;\n        }\n      }\n    \n  })\n}\n\n}\n","\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.3.1/css/foundation.min.css\">\n    <form [formGroup]=\"rForm\" (ngSubmit)=\"Submit(rForm.value)\">\n      <div class=\"form-container\">\n        <div class=\"row columns\">\n          <img src=\"../../assets/images/halls.png\" alt=\"halls\">\n          <h1>Forget Password</h1>\n\n          <label >Email\n            <input type=\"text\" (focus)=\"focusIn($event)\" placeholder=\"Enter your email\" formControlName=\"email\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['email'].valid && rForm.controls['email'].touched\">\n              This field is required and it should be an email\n          </div>\n          <div class=\"alert invalidEmail\" *ngIf=\"!isValidEmail\" >\n            This email is invalid\n            </div>\n          <p>Please Open your email to reset the password</p>\n\n          <input type=\"submit\" class=\"button expanded\" value=\"Send Verificaton mail\" [disabled]=\"!rForm.valid\">\n\n          <div class=\"alert mailSent\" *ngIf=\"mailSent\">\n            the Verificaton mail has been sent to your inbox\n          </div>\n  \n        </div>\n      </div>\n    </form>\n  \n  \n","import { Component, OnInit,Input } from '@angular/core';\nimport {FormBuilder,FormGroup, Validators} from '@angular/forms'\nimport { HttpClient } from '@angular/common/http';\nimport {AuthService} from '../auth.service'\nimport {Router}      from '@angular/router'\nimport {numValidator} from './validators'\nimport {AbstractControl} from '@angular/forms'\n\n\n\n@Component({\n  selector: 'app-form-data',\n  templateUrl: './form-data.component.html',\n  styleUrls: ['./form-data.component.css']\n})\nexport class FormDataComponent implements OnInit {\n\n  public token:string;\n  myForm:FormGroup;\n  showhidepregnant: boolean=true;\n  titleAlert:string=\"This field is required and should be a positive number\";\n  message:string=\"please enter a positive number\";\n  isBench:boolean=false;\n  isGap:boolean=false;\n  widBench:number;\n  numGap:number;\n  validBench:boolean=true;\n  validGap:boolean=true;\n  constructor(private http:HttpClient,private fb:FormBuilder\n    ,public _authService:AuthService ,private router:Router) { }\n\n  ngOnInit(): void {\n    \n    this.myForm=this.fb.group({\n      rowsCnt:['',[Validators.required,numValidator]],\n      colsCnt:['',[Validators.required,numValidator]],\n      lenChair:['',[Validators.required,numValidator]],\n      widChair:['',[Validators.required,numValidator]],\n      benchRadio:['',[Validators.required,numValidator]],\n      gapRadio:['',[Validators.required,numValidator]],\n      isBenchClicked:[''],\n      isGapClicked:[''],\n    })\n    this.myForm.valueChanges.subscribe(console.log);\n\n  }\n    \n  submit(data):void{\n    console.log(data)\n    this.http.get<any>(this._authService.baseUrl+'/FormData')\n    .subscribe(data=>{\n      console.log(\"Response\\n\"+data.message+\"\\n\"+data.token);\n      console.log(\"Should be done\")\n      this.router.navigate(['/result'])\n\n    },\n    err=>console.log(err));\n    return;\n  }\n\n  check(value){\n \n    if(value==\"yes\"){\n      this.isBench=true;\n      this.checkValue();\n    }\n    else{\n      this.isBench=false;\n      this.validBench=true;\n    }\n\n  }\n  checkValue(){\n    if(this.widBench>=1){\n      this.validBench=true;\n    }\n    else{\n      this.validBench=false;\n    }\n  }\n\n  checkGap(value){\n    if(value==\"yes\"){\n      this.isGap=true;\n      this.checkValueGap();\n    }\n    else{\n      this.isGap=false;\n      this.validGap=true;\n    }\n  }\n  checkValueGap(){\n    if(this.numGap>=1){\n      this.validGap=true;\n    }\n    else{\n      this.validGap=false;\n    }\n\n  }\n  \n\n}\n","\n<header>\n   <div class=\"topnav\">\n      <a (click)=\"_authService.logOut()\">Logout</a>\n      <a href>History</a>\n      <a href>Guide</a>\n      <a class=\"active\" href=\"#home\">Home</a>\n   </div>\n</header>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.3.1/css/foundation.min.css\">\n   <form [formGroup]=\"myForm\"  (ngSubmit)=\"submit(myForm.value)\">\n      <div class=\"form-container\">\n         <label class=\"title\">Hall Data Form</label>\n         <hr>\n         \n         <label for=\"\" >Enter count of rows in the hall </label>\n         <mat-form-field>\n            <input matInput placeholder={{message}} formControlName=\"rowsCnt\">\n         </mat-form-field>\n         <div class=\"alert\" *ngIf=\"!myForm.controls['rowsCnt'].valid && myForm.controls['rowsCnt'].touched\">\n            {{titleAlert}}\n         </div>\n\n         <label for=\"\" >Enter count of columns in the hall </label>\n         <mat-form-field>\n            <input matInput placeholder={{message}} formControlName=\"colsCnt\">\n         </mat-form-field>\n         <div class=\"alert\" *ngIf=\"!myForm.controls['colsCnt'].valid && myForm.controls['colsCnt'].touched\">\n            {{titleAlert}}\n         </div>\n         <br>\n         <br>\n         <br>\n\n         <label class=\"chair\" for=\"\">Chair dimensions</label>\n         <hr>\n\n         <label for=\"\" >Enter length of the chair in the centimeters</label>\n         <mat-form-field>\n            <input matInput placeholder={{message}} formControlName=\"lenChair\">\n         </mat-form-field>\n         <div class=\"alert\" *ngIf=\"!myForm.controls['lenChair'].valid && myForm.controls['lenChair'].touched\">\n            {{titleAlert}}\n         </div>\n\n         <label for=\"\" >Enter width of the chair in the centimeters</label>\n         <mat-form-field>\n            <input matInput placeholder={{message}} formControlName=\"widChair\">\n         </mat-form-field>\n         <div class=\"alert\" *ngIf=\"!myForm.controls['widChair'].valid && myForm.controls['widChair'].touched\">\n            {{titleAlert}}\n         </div>\n\n         <label>Is there a bench infront of chairs?</label>\n         <br>\n\n         <mat-radio-group formControlName=\"benchRadio\">\n            <mat-radio-button (change)=\"check($event.value)\" id=\"yesBench\" #register value=\"yes\">Yes</mat-radio-button> \n            <br>\n            <mat-radio-button (change)=\"check($event.value)\" id=\"noBench\" value=\"no\"> No</mat-radio-button>    \n         </mat-radio-group>\n\n         <div *ngIf=\"register.checked\">\n            <br>\n            <label for=\"\">please enter the width of bench in the centimeters</label>\n            <mat-form-field>\n               <input matInput (keyup)=\"checkValue()\" [(ngModel)]=\"widBench\" placeholder=\"width of bench\" formControlName=\"isBenchClicked\">\n            </mat-form-field>\n            <div class=\"alert\" *ngIf=\"!validBench && myForm.controls['isBenchClicked'].touched\">\n               {{titleAlert}}\n            </div>\n         </div>\n         <br>\n         <br>\n\n         <label>Is there a gap between columns?</label>\n         <br>\n\n         <mat-radio-group formControlName=\"gapRadio\">\n            <mat-radio-button (change)=\"checkGap($event.value)\" #gapExist value=\"yes\">Yes</mat-radio-button> \n            <br>\n            <mat-radio-button (change)=\"checkGap($event.value)\" value=\"no\"> No</mat-radio-button>    \n         </mat-radio-group>\n\n         <div *ngIf=\"gapExist.checked\">\n            <br>\n            <label for=\"\">please enter after how many columns appears the gap</label>\n            <mat-form-field>\n               <input matInput (keyup)=\"checkValueGap()\" placeholder=\"number of columns\" [(ngModel)]=\"numGap\" formControlName=\"isGapClicked\">\n            </mat-form-field>\n            <div class=\"alert\" *ngIf=\"!validGap&& myForm.controls['isGapClicked'].touched\">\n               {{titleAlert}}\n            </div>\n         </div>\n\n         <input type=\"submit\" class=\"button expanded\" value=\"Submit\" [disabled]=\"!myForm.valid||!validBench || !validGap\">\n\n      </div> \n   </form>\n\n","import {AbstractControl} from '@angular/forms'\r\n\r\nexport function numValidator(control:AbstractControl){\r\n    if(this.isBench){\r\n        if(control.value==null || control.value==undefined){\r\n            if(control.value<=0){\r\n                return {\r\n                    isError:true\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\n","import { Component, OnInit ,Input,Output,EventEmitter} from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport {AppComponent} from '../app.component'\nimport {Router}      from '@angular/router'\nimport {AuthService} from '../auth.service'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  rForm:FormGroup;\n  public titleAlert:string=\"This field is required\";\n  @Output() getToken=new EventEmitter<string>();\n  @Output() isLogged=new EventEmitter<boolean>();\n  public loggedIn:boolean=false;\n  public token:string=\"\";\n  isValidPass:boolean=true; \n  showPassword:boolean=false;\n  \n  constructor(private _auth:AuthService,private http:HttpClient,private appComponent:AppComponent,private fb:FormBuilder,private router:Router) { \n    this.rForm=fb.group({\n      'email':['',Validators.required] ,\n      'password':['',Validators.required],\n      'rememberMe':['']\n     })\n  }\n\n  ngOnInit(): void {\n\n  }\n  focusIn(event: FocusEvent) {\n    console.log(event.detail);\n    this.isValidPass=true;\n  }\n\n  SignIn(data){\n    const user={\n      email:data.email,\n      password:data.password\n    }\n    this._auth.loginUser(user).subscribe(\n      res=>{\n        console.log(res)\n        localStorage.setItem('token',res.token)\n        this.router.navigate(['/FormData'])\n      },\n      err=>{\n      if(err instanceof HttpErrorResponse){\n        if(err.status===401){\n          this.isValidPass=false;        \n        }\n      }\n    \n  })\n\n}\n}\n","\n<div class=\"container\">\n    <div class=\"split left\">\n        <!-- <img src=\"images/halls.png\" alt=\"halls\"> -->\n        <form [formGroup]=\"rForm\" (ngSubmit)=\"SignIn(rForm.value)\">\n        <h1 class=\"leftHeader\">Sign In</h1>\n        <input class=\"inputData email\" type=\"text\" name=\"email\" placeholder=\"Enter your email\" formControlName=\"email\">\n        <div class=\"alert\" *ngIf=\"!rForm.controls['email'].valid && rForm.controls['email'].touched\">\n            {{titleAlert}}\n        </div>\n        \n        <input (focus)=\"focusIn($event)\" class=\"inputData password\" type=\"password\" name=\"password\" placeholder=\"Enter your Password\" formControlName=\"password\">\n        <div class=\"alert\" *ngIf=\"!rForm.controls['password'].valid && rForm.controls['password'].touched\">\n            {{titleAlert}}\n        </div>\n        \n        <div class=\"alert invalidPassword\" *ngIf=\"!isValidPass\" >\n            this password is invalid\n        </div>\n        <a routerLink=\"/forgetpass\" class=\"forgetPass\">Forgot Your Password?</a>\n        <p> <span><input id=\"rememberMe\" type=\"checkbox\"></span>Remember me</p>\n        <input type=\"submit\" class=\"leftBtn\" value=\"Sign In\" [disabled]=\"!rForm.valid\">\n        <a routerLink=\"/signup\" class=\"createAccount\">Create an account</a>\n        </form>\n    </div>\n    <div class=\"split right\">\n        <h1 class=\"rightHeader\">Welcome !</h1>\n        <div class=\"About\">\n            <p>We are <span>H a l l s</span> and we believe we have to change\n            a thing for the current </p><p>panadmeic covid-19,So we set our website to\n            keep people safe by </p><p>guranteeing the social distance.</p>\n            <p>Enter the image of you to <span>H a l l s </span> and we will distribute it\n            Give it a try ;)</p> \n        </div>\n        <!-- <a href=\"#\" class=\"button\">Try it!</a> -->\n    </div>\n  </div>\n  <script src=\"./controlSplit.js\"></script>\n  <router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  // MatMenuModule,\n  MatToolbarModule\n} from '@angular/material/toolbar';\nconst MaterialComponents=[\n  // MatMenuModule,\n  MatToolbarModule\n]\n\n\n@NgModule({\n  \n  imports: [MaterialComponents],\n  exports:[MaterialComponents]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormBuilder} from '@angular/forms'\nimport {passValidator,cnfPassValidator} from '../signup/validator'\nimport {AuthService} from '../auth.service'\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-resetpass',\n  templateUrl: './resetpass.component.html',\n  styleUrls: ['./resetpass.component.css']\n})\nexport class ResetpassComponent implements OnInit {\n  successReset:boolean =false;\n  failedReset:boolean=false;\n  rForm:FormGroup;\n  private id:string;\n  constructor(private fb:FormBuilder,private _auth:AuthService,private route:ActivatedRoute) {\n    this.rForm=fb.group({\n      'password':['',passValidator] ,\n      'Repassword':[null,cnfPassValidator] \n     })\n   }\n\n  ngOnInit(): void {\n    this.id=this.route.snapshot.queryParamMap.get('id')\n    console.log(this.id)\n  }\n\n  Submit(data){\n    console.log(this.id);\n    this._auth.resetPassword(data,this.id).subscribe(\n      res=>{\n        if(res.message===\"You reset password successfly\")\n        {\n          console.log(\"Success Reset\")\n          this.successReset=true;\n          localStorage.setItem('token',res.token)\n        }\n      },\n      err=>{\n        this.failedReset=true;\n      }\n    )\n    console.log(data);\n  }\n\n}\n","\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.3.1/css/foundation.min.css\">\n    <form [formGroup]=\"rForm\" (ngSubmit)=\"Submit(rForm.value)\">\n      <div class=\"form-container\">\n        <div class=\"row columns\">\n          <img src=\"../../assets/images/halls.png\" alt=\"halls\">\n          <h1>Reset Password</h1>\n\n          <label for=\"passwordInput\">Password\n            <input type=\"password\" placeholder=\"Enter your password\" formControlName=\"password\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['password'].valid && rForm.controls['password'].touched\">\n              This password should have at least 8 characters\n          </div>\n          <label for=\"ConfPassword\">Retype password\n            <input type=\"password\" placeholder=\"Confirm your password\" formControlName=\"Repassword\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['Repassword'].valid && rForm.controls['Repassword'].touched\">\n              The passwords don't match \n          </div>\n\n\n\n          <input type=\"submit\" class=\"button expanded\" value=\"Change Password\" [disabled]=\"!rForm.valid\">\n          <div class=\"alertPass Success\" *ngIf=\"successReset\">\n            Your password has been reset successfully\n        </div>\n\n        <div class=\"alertPass Fail\" *ngIf=\"failedReset\">\n          Your password hasn't been reset,Please try again\n      </div>\n      <br>\n      <a class=\"back\" routerLink=\"/formData\" *ngIf=\"successReset\">click here to start using the website</a>\n\n\n        </div>\n      </div>\n    </form>\n  \n  \n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service'\nimport {Router}      from '@angular/router'\n\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n\n  constructor(public authService:AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<header>\n<div class=\"topnav\">\n    <a (click)=\"authService.logOut()\">Logout</a>\n    <a href>History</a>\n    <a href>Guide</a>\n    <a class=\"active\" href=\"#home\">Home</a>\n </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {AppComponent} from '../app.component'\nimport {FormBuilder,FormGroup,Validators, AbstractControl} from '@angular/forms'\nimport {cnfPassValidator,emailValidator, passValidator} from './validator'\nimport {AuthService} from '../auth.service'\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  name:string='';\n  email:string;\n  password:string=\"\";\n  Repassword:string=\"\";\n  signUpUrl:string=\"\";\n  MailExist:boolean=false;\n  rForm:FormGroup;\n  titleAlert:string=\"This field is required\";\n  passAlert:string=\"Password should has minuimum 8 characters\";\n  cnfPassAlert:string=\"The passwords don't match\";\n\n  constructor(private http:HttpClient,private appComponent:AppComponent\n    ,private fb:FormBuilder,private _auth:AuthService,private router:Router) {\n    this.rForm=fb.group({\n      'name':['',Validators.required] ,\n      'email':['',emailValidator],\n      'password':['',passValidator] ,\n      'Repassword':[null,cnfPassValidator] \n     })\n    \n\n  }\n\n  ngOnInit(): void {\n  }\n\n  SignUp(data){\n    this._auth.SignUp(data).subscribe(\n      res=>{\n        localStorage.setItem('token',res.token)\n        this.router.navigate(['/FormData'])\n      },\n      err=>{}\n    )\n    return;\n  }\n\n  isMailExist(){\n    if(this.email!=undefined&&this.email!=null){\n      var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      const isMatched=this.email.match(regex);\n      // console.log(\"isMatched\"+isMatched)\n      if(isMatched!=null){\n        console.log(\"Request Sent Mail Exist\")\n        this._auth.isMailExist(this.email).subscribe(res=>{\n          console.log(\"IN RESPONSEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\")\n          console.log(res)\n          if(res.message===\"success\"){\n            this.MailExist=false;\n            console.log(this.MailExist)\n          }\n        },\n        err=>{\n          if(err.status===409){\n          this.MailExist=true;\n          console.log(this.MailExist)\n          }\n\n        })\n      }\n    }\n  }\n  \n}\n\n","\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.3.1/css/foundation.min.css\">\n    <form [formGroup]=\"rForm\" (ngSubmit)=\"SignUp(rForm.value)\">\n      <div class=\"form-container\">\n        <div class=\"row columns\">\n          <img src=\"../../assets/images/halls.png\" alt=\"halls\">\n          <h1>Sign Up Now</h1>\n  \n          <label >User Name\n            <input type=\"text\" formControlName=\"name\" value={{name}} placeholder=\"Enter your user name\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['name'].valid && rForm.controls['name'].touched\">\n              {{titleAlert}}\n          </div>\n\n          <label >Email\n            <input type=\"text\" id =\"myInput\" (input)=\"isMailExist()\"[(ngModel)]=\"email\" placeholder=\"Enter your email\" formControlName=\"email\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['email'].valid && rForm.controls['email'].touched\">\n              This field is required and it should be in an email\n          </div>\n          <div class=\"alert\" *ngIf=\"MailExist\">\n            This mail exists for another account,Enter another one\n        </div>\n\n          <label for=\"passwordInput\">Password\n            <input type=\"password\" placeholder=\"Enter your password\" formControlName=\"password\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['password'].valid && rForm.controls['password'].touched\">\n              {{passAlert}}\n          </div>\n          <label for=\"ConfPassword\">Retype password\n            <input type=\"password\" placeholder=\"Confirm your password\" formControlName=\"Repassword\">\n          </label>\n  \n          <div class=\"alert\" *ngIf=\"!rForm.controls['Repassword'].valid && rForm.controls['Repassword'].touched\">\n              {{cnfPassAlert}}\n          </div>\n\n          <input type=\"submit\" class=\"button expanded\" value=\"Sign Up\" [disabled]=\"!rForm.valid || MailExist\">\n  \n        </div>\n      </div>\n    </form>\n    <script>\n      ]]\n        console.log(\"Guyssssssssssssssssssssss\")\n        var typingTimer;                //timer identifier\n        var doneTypingInterval = 5000;  //time in ms, 5 second for example\n        var $input = $('#myInput');\n        var element=document.getElementById(\"emailInput\")\n        //on keyup, start the countdown\n        $input.on('keyup', function () {\n          console.log('keyup')\n          clearTimeout(typingTimer);\n          typingTimer = setTimeout(doneTyping, doneTypingInterval);\n        });\n\n        //on keydown, clear the countdown \n        $input.on('keydown', function () {\n          console.log('keydone')\n          clearTimeout(typingTimer);\n        });\n\n        //user is \"finished typing,\" do something\n        function doneTyping () {\n          console.log(\"we caaaaaaaaaaaaaaaaaaaaaaaan\")\n          //do something\n        }\n    </script>\n  \n  \n","import {AbstractControl} from '@angular/forms'\n\nexport function passValidator(control:AbstractControl){\n    if(control &&(control.value!=null || control.value!=undefined)){\n        const passValue=control.value;\n        if(passValue.length<8){\n            return {\n                isError:true\n            };\n        }\n    }\n    return null\n}\n\nexport function cnfPassValidator(control:AbstractControl){\n    if(control &&(control.value!=null|| control.value!=undefined)){\n        const cnfpassValue=control.value;\n        const passControl=control.root.get('password');\n\n        if(passControl){\n            const passValue=passControl.value;\n            if(passValue!==cnfpassValue){\n                return{\n                    isError:true\n                };\n            }\n        }\n        return null;\n    }\n    else{\n        return{\n            isError:true\n        };\n    }\n}\n\nexport function emailValidator(control:AbstractControl){\n    if(control &&(control.value!=null || control.value!=undefined)){\n        const emailValue=control.value;\n        const regex =/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const isMatched=emailValue.match(regex);\n        if(isMatched==null){\n            return{\n                isError:true\n            };\n        }\n\n    }\n    return null;\n}","import { Injectable ,Injector} from '@angular/core';\nimport {HttpInterceptor} from '@angular/common/http'\nimport {AuthService} from './auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector:Injector) { }\n  intercept(req,next){\n    let authService=this.injector.get(AuthService);\n    console.log(\"whaaaaat \"+authService.getToken())\n    let tokenizedReq=req.clone({\n      setHeaders:{\n        Authorization:`Bearer ${authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}